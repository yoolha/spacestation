(()=>{"use strict";var s={n:e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},d:(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(s,e)=>Object.prototype.hasOwnProperty.call(s,e)};const e=require("express");var t=s.n(e);const a=require("swagger-jsdoc");var c=s.n(a)()({definition:{info:{title:"Space Station API",version:"1.0.0",description:" 우주정거장 API"},host:"localhost:8080",basepath:"../"},apis:["./src/routes/*.js","./swagger/*"]});const u=require("swagger-ui-express");var o=s.n(u);const S=require("dotenv");var O=s.n(S);const E=require("cors");var T=s.n(E),R=function(s,e){return{isSuccess:s.isSuccess,code:s.code,message:s.message,result:e}};const d=require("http-status-codes");var _={SUCCESS:{status:d.StatusCodes.OK,isSuccess:!0,code:200,message:"success!"},INTERNAL_SERVER_ERROR:{status:d.StatusCodes.INTERNAL_SERVER_ERROR,isSuccess:!1,code:"COMMON000",message:"서버 에러, 관리자에게 문의 바랍니다."},BAD_REQUEST:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"COMMON001",message:"잘못된 요청입니다."},UNAUTHORIZED:{status:d.StatusCodes.UNAUTHORIZED,isSuccess:!1,code:"COMMON002",message:"권한이 잘못되었습니다."},METHOD_NOT_ALLOWED:{status:d.StatusCodes.METHOD_NOT_ALLOWED,isSuccess:!1,code:"COMMON003",message:"지원하지 않는 Http Method 입니다."},FORBIDDEN:{status:d.StatusCodes.FORBIDDEN,isSuccess:!1,code:"COMMON004",message:"금지된 요청입니다."},NOT_CREATED:{status:d.StatusCodes.INTERNAL_SERVER_ERROR,isSuccess:!1,code:"COMMON010",message:"데이터베이스 생성 실패했습니다."},NOT_SEARCHED:{status:d.StatusCodes.INTERNAL_SERVER_ERROR,isSuccess:!1,code:"COMMON011",message:"데이터베이스 조회 실패했습니다."},NOT_UPDATED:{status:d.StatusCodes.INTERNAL_SERVER_ERROR,isSuccess:!1,code:"COMMON012",message:"데이터베이스 수정 실패했습니다."},NOT_DELETED:{status:d.StatusCodes.INTERNAL_SERVER_ERROR,isSuccess:!1,code:"COMMON013",message:"데이터베이스 삭제 실패했습니다."},POST_NOT_FOUND:{status:d.StatusCodes.NOT_FOUND,isSuccess:!1,code:"POST002",message:"해당 글을 찾을 수 없습니다."},POST_TITLE_EMPTY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST011",message:"제목을 입력해 주세요."},POST_CONTENT_EMPTY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST012",message:"내용을 입력해 주세요."},POST_CONTENT_TOO_LONG:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST013",message:"게시글 내용이 너무 깁니다. 65535자 이내로 작성해주세요."},POST_VISIBILITY_EMPTY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST014",message:"공개여부를 선택해 주세요."},POST_TIME_EMPTY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST015",message:"터뜨리기 시간을 설정해주세요."},POST_UNAUTHORIZED:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"POST016",message:"해당 글의 작성자만 이용할 수 있는 서비스 입니다."},WRONG_EXTENSION:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"FILE001",message:"허용된 파일 확장자가 아닙니다."},WRONG_QUERY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"QUERY001",message:"잘못된 QUERY String 입니다."},WRONG_PATH:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"PATH001",message:"잘못된 PATH String 입니다."},BOOK_NOT_FOUND:{status:d.StatusCodes.NOT_FOUND,isSuccess:!1,code:"BOOK001",message:"해당 책을 찾지 못했습니다."},BOOK_CONTENT_NOT_FOUND:{status:d.StatusCodes.NOT_FOUND,isSuccess:!1,code:"BOOK002",message:"해당 목차를 찾지 못했습니다."},BOOK_UNAUTHORIZED:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"BOOK020",message:"해당 책의 작성자만 이용할 수 있는 서비스 입니다."},QUESTION_ANSWER_ALREADY:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"QUESTION001",message:"오늘의 질문에 이미 답변을 하셨습니다. 수정을 원하시면 수정하기를 선택해주세요."},QUESTION_NOT_FOUND:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"QUESTION001",message:"오늘의 질문을 찾지 못했습니다. 관리자에게 문의해주세요."},QUESTION_UNAUTHORIZED:{status:d.StatusCodes.BAD_REQUEST,isSuccess:!1,code:"BOOK020",message:"해당 답변의 작성자만 이용할 수 있는 서비스 입니다."}},N=t().Router();N.get("",(function(s,e,t){e.send("HELLO, I'm Healthy!")})),O().config();var i=t()();i.set("port",process.env.PORT||8080),i.use(T()()),i.use(t().static("public")),i.use(t().json()),i.use(t().urlencoded({extended:!1})),i.use("/api-docs",o().serve,o().setup(c)),i.use("/health",N),i.get("/",(function(s,e,t){e.send(R(_.SUCCESS,"루트 페이지!"))})),i.use((function(s,e,t,a){t.locals.message=s.message,t.locals.error={},console.error(s),t.status(s.data.status||_.INTERNAL_SERVER_ERROR).send(R(s.data))})),i.listen(i.get("port"),(function(){console.log("Example app listening on port ".concat(i.get("port")))}))})();